buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id "net.ltgt.apt" version "0.15"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

task runApp(type:JavaExec) {
//    classpath = configurations.compile
    classpath = sourceSets.main.compileClasspath
//    classpath sourceSets.main.output.classesDirs
//    classpath configurations.runtime
    main = 'org.example.generator.RandomEntityGenerator'

//    args 'appArg1'
    println "generated big POJO"
}

// https://stackoverflow.com/questions/19529817/how-to-execute-a-task-of-type-javaexec-before-compilejava
//configurations {
//    customClasspath
//}
//
//dependencies {
//    customClasspath files('path/to/your.jar')
//}
//
//task runSimple(type: JavaExec) {
//    main = 'jjrom.ObjectGen'
//    classpath = configurations.customClasspath
//    File prop1 = file(propFilePath)
//    args '-sqlserver', '-force', prop1.path
//    println "I'm done executing."
//}
//
//compileJava {
//    dependsOn runSimple
//}

compileJava.dependsOn runApp

test.onlyIf { Boolean.getBoolean('run.tests') }

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile 'com.squareup:javapoet:1.11.1'
    compile 'io.github.benas:random-beans:3.7.0'

    compile('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}